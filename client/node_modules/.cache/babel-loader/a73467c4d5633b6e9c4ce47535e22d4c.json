{"ast":null,"code":"const Initial_State = {\n  hidden: true,\n  cart: []\n};\n\nconst addItem = (prevcart, newcart) => {\n  const exists = prevcart.find(cartItems => cartItems.id === newcart.id);\n\n  if (exists) {\n    return prevcart.map(c => c.id === newcart.id ? { ...c,\n      quantity: c.quantity + 1\n    } : c);\n  } else {\n    return [...prevcart, { ...newcart,\n      quantity: 1\n    }];\n  }\n};\n\nconst cartRedux = (state = Initial_State, action) => {\n  switch (action.type) {\n    case \"Toggle_Cart\":\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case \"Add_Item\":\n      return { ...state,\n        cart: addItem(state.cart, action.payload)\n      };\n\n    case \"Remove_Item\":\n      return { ...state,\n        cart: state.cart.filter(items => items.id != action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartRedux;","map":{"version":3,"sources":["F:/React Projects/ecommerce/ec/src/redux/cart/cart-reducer.js"],"names":["Initial_State","hidden","cart","addItem","prevcart","newcart","exists","find","cartItems","id","map","c","quantity","cartRedux","state","action","type","payload","filter","items"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,IAAI,EAAE;AAFc,CAAtB;;AAKA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACrC,QAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAeC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBJ,OAAO,CAACI,EAAtD,CAAf;;AAEA,MAAIH,MAAJ,EAAY;AACV,WAAOF,QAAQ,CAACM,GAAT,CAAcC,CAAD,IAClBA,CAAC,CAACF,EAAF,KAASJ,OAAO,CAACI,EAAjB,GAAsB,EAAE,GAAGE,CAAL;AAAQC,MAAAA,QAAQ,EAAED,CAAC,CAACC,QAAF,GAAa;AAA/B,KAAtB,GAA2DD,CADtD,CAAP;AAGD,GAJD,MAIO;AACL,WAAO,CAAC,GAAGP,QAAJ,EAAc,EAAE,GAAGC,OAAL;AAAcO,MAAAA,QAAQ,EAAE;AAAxB,KAAd,CAAP;AACD;AACF,CAVD;;AAYA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGd,aAAT,EAAwBe,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELb,QAAAA,MAAM,EAAE,CAACa,KAAK,CAACb;AAFV,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELZ,QAAAA,IAAI,EAAEC,OAAO,CAACW,KAAK,CAACZ,IAAP,EAAaa,MAAM,CAACE,OAApB;AAFR,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELZ,QAAAA,IAAI,EAAEY,KAAK,CAACZ,IAAN,CAAWgB,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACV,EAAN,IAAYM,MAAM,CAACE,OAAP,CAAeR,EAAxD;AAFD,OAAP;;AAKF;AACE,aAAOK,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,SAAf","sourcesContent":["const Initial_State = {\r\n  hidden: true,\r\n  cart: [],\r\n};\r\n\r\nconst addItem = (prevcart, newcart) => {\r\n  const exists = prevcart.find((cartItems) => cartItems.id === newcart.id);\r\n\r\n  if (exists) {\r\n    return prevcart.map((c) =>\r\n      c.id === newcart.id ? { ...c, quantity: c.quantity + 1 } : c\r\n    );\r\n  } else {\r\n    return [...prevcart, { ...newcart, quantity: 1 }];\r\n  }\r\n};\r\n\r\nconst cartRedux = (state = Initial_State, action) => {\r\n  switch (action.type) {\r\n    case \"Toggle_Cart\":\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden,\r\n      };\r\n    case \"Add_Item\":\r\n      return {\r\n        ...state,\r\n        cart: addItem(state.cart, action.payload),\r\n      };\r\n    case \"Remove_Item\":\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((items) => items.id != action.payload.id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartRedux;\r\n"]},"metadata":{},"sourceType":"module"}