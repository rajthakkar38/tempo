{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { googleProvider, auth, createUserDoc, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { SignInSucess, SignInFailure, SignOutFailure, SignOutSucess } from \"./user-action\";\nexport function* Google() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserDoc, user);\n    const userSnap = yield userRef.get();\n    yield put(SignInSucess({\n      id: userSnap.id,\n      ...userSnap.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n_c = Google;\nexport function* GoogleSignInStart() {\n  yield takeLatest(\"Google_SignIn_Start\", Google);\n}\n_c2 = GoogleSignInStart;\nexport function* Email({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserDoc, user);\n    const userSnap = yield userRef.get();\n    yield put(SignInSucess({\n      id: userSnap.id,\n      ...userSnap.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n_c3 = Email;\nexport function* EmailSignInStart() {\n  yield takeLatest(\"Email_SignIn_Start\", Email);\n}\n_c4 = EmailSignInStart;\nexport function* Session() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    const userRef = yield call(createUserDoc, userAuth);\n    const userSnap = yield userRef.get();\n    yield put(SignInSucess({\n      id: userSnap.id,\n      ...userSnap.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n_c5 = Session;\nexport function* CheckUserSession() {\n  yield takeLatest(\"Check_User_Session\", Session);\n}\n_c6 = CheckUserSession;\nexport function* SignOut() {\n  try {\n    yield auth.signOut();\n    yield put(SignOutSucess());\n  } catch (error) {\n    yield put(SignOutFailure(error.message));\n  }\n}\n_c7 = SignOut;\nexport function* SignOutStart() {\n  yield takeLatest(\"SignOut_Start\", SignOut);\n}\n_c8 = SignOutStart;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Google\");\n$RefreshReg$(_c2, \"GoogleSignInStart\");\n$RefreshReg$(_c3, \"Email\");\n$RefreshReg$(_c4, \"EmailSignInStart\");\n$RefreshReg$(_c5, \"Session\");\n$RefreshReg$(_c6, \"CheckUserSession\");\n$RefreshReg$(_c7, \"SignOut\");\n$RefreshReg$(_c8, \"SignOutStart\");","map":{"version":3,"sources":["F:/React Projects/ecommerce/ec/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","googleProvider","auth","createUserDoc","getCurrentUser","SignInSucess","SignInFailure","SignOutFailure","SignOutSucess","Google","user","signInWithPopup","userRef","userSnap","get","id","data","error","message","GoogleSignInStart","Email","payload","email","password","signInWithEmailAndPassword","EmailSignInStart","Session","userAuth","CheckUserSession","SignOut","signOut","SignOutStart"],"mappings":"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","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport {\r\n  googleProvider,\r\n  auth,\r\n  createUserDoc,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  SignInSucess,\r\n  SignInFailure,\r\n  SignOutFailure,\r\n  SignOutSucess,\r\n} from \"./user-action\";\r\n\r\nexport function* Google() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserDoc, user);\r\n    const userSnap = yield userRef.get();\r\n    yield put(SignInSucess({ id: userSnap.id, ...userSnap.data() }));\r\n  } catch (error) {\r\n    yield put(SignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* GoogleSignInStart() {\r\n  yield takeLatest(\"Google_SignIn_Start\", Google);\r\n}\r\n\r\nexport function* Email({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserDoc, user);\r\n\r\n    const userSnap = yield userRef.get();\r\n    yield put(SignInSucess({ id: userSnap.id, ...userSnap.data() }));\r\n  } catch (error) {\r\n    yield put(SignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* EmailSignInStart() {\r\n  yield takeLatest(\"Email_SignIn_Start\", Email);\r\n}\r\n\r\nexport function* Session() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    const userRef = yield call(createUserDoc, userAuth);\r\n    const userSnap = yield userRef.get();\r\n    yield put(SignInSucess({ id: userSnap.id, ...userSnap.data() }));\r\n  } catch (error) {\r\n    yield put(SignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* CheckUserSession() {\r\n  yield takeLatest(\"Check_User_Session\", Session);\r\n}\r\n\r\nexport function* SignOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(SignOutSucess());\r\n  } catch (error) {\r\n    yield put(SignOutFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* SignOutStart() {\r\n  yield takeLatest(\"SignOut_Start\", SignOut);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}