{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDSjj5QOokYSxwrXgE8l6rWJjE3dO8gCuw\",\n  authDomain: \"react-ec-2093f.firebaseapp.com\",\n  projectId: \"react-ec-2093f\",\n  storageBucket: \"react-ec-2093f.appspot.com\",\n  messagingSenderId: \"15116174600\",\n  appId: \"1:15116174600:web:bcdc2e17cb0c4eeaa398bd\",\n  measurementId: \"G-Q3XY0233QG\"\n};\nfirebase.initializeApp(config);\nexport const createUserDoc = async (userAuth, otherData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const data = await userRef.get();\n\n  if (!data.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...otherData\n      });\n    } catch (error) {\n      console.log(\"Error\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionandItems = (collectionKey, objectstoAdd) => {\n  const collRef = firestore.collection(collectionKey);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["F:/React Projects/ecommerce/ec/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserDoc","userAuth","otherData","userRef","firestore","doc","uid","data","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionandItems","collectionKey","objectstoAdd","collRef","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,SAAS,EAAE,gBAHE;AAIbC,EAAAA,aAAa,EAAE,4BAJF;AAKbC,EAAAA,iBAAiB,EAAE,aALN;AAMbC,EAAAA,KAAK,EAAE,0CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,aAAa,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA+B;AAC1D,MAAI,CAACD,QAAL,EAAe;AACb;AACD;;AACD,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAnB;;AACA,MAAI,CAACD,IAAI,CAACE,MAAV,EAAkB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACFV,MAAAA,OAAO,CAACW,GAAR,CAAY;AAAEJ,QAAAA,WAAF;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA,SAAtB;AAAiC,WAAGV;AAApC,OAAZ;AACD,KAFD,CAEE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,OAA3B;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAhBM;AAkBP,OAAO,MAAMgB,qBAAqB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACpE,QAAMC,OAAO,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAhB;AACD,CAFM;AAIP,OAAO,MAAMI,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMqB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDSjj5QOokYSxwrXgE8l6rWJjE3dO8gCuw\",\r\n  authDomain: \"react-ec-2093f.firebaseapp.com\",\r\n  projectId: \"react-ec-2093f\",\r\n  storageBucket: \"react-ec-2093f.appspot.com\",\r\n  messagingSenderId: \"15116174600\",\r\n  appId: \"1:15116174600:web:bcdc2e17cb0c4eeaa398bd\",\r\n  measurementId: \"G-Q3XY0233QG\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserDoc = async (userAuth, otherData) => {\r\n  if (!userAuth) {\r\n    return;\r\n  }\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const data = await userRef.get();\r\n  if (!data.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      userRef.set({ displayName, email, createdAt, ...otherData });\r\n    } catch (error) {\r\n      console.log(\"Error\", error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const addCollectionandItems = (collectionKey, objectstoAdd) => {\r\n  const collRef = firestore.collection(collectionKey);\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}