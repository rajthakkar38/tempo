{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils.js\";\nexport function* fetchCollectionsStartAsync() {\n  yield console.log(\"Fired\");\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(FetchCollectionSucess(collectionsMap));\n    }).catch(error => dispatch(FetchCollectionFailure(error.message)));\n  };\n}\nexport function* FetchCollectionStart() {\n  yield takeEvery(\"Fetch_Collection_Start\", fetchCollectionsStartAsync);\n}\n_c = FetchCollectionStart;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchCollectionStart\");","map":{"version":3,"sources":["F:/React Projects/ecommerce/ec/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStartAsync","console","log","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","FetchCollectionSucess","catch","error","FetchCollectionFailure","message","FetchCollectionStart"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAKA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AAEA,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACO,qBAAqB,CAACD,cAAD,CAAtB,CAAR;AACD,KALH,EAMGE,KANH,CAMUC,KAAD,IAAWT,QAAQ,CAACU,sBAAsB,CAACD,KAAK,CAACE,OAAP,CAAvB,CAN5B;AAOD,GAVD;AAWD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMlB,SAAS,CAAC,wBAAD,EAA2BG,0BAA3B,CAAf;AACD;KAFgBe,oB","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils.js\";\r\n\r\nexport function* fetchCollectionsStartAsync() {\r\n  yield console.log(\"Fired\");\r\n\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(FetchCollectionSucess(collectionsMap));\r\n      })\r\n      .catch((error) => dispatch(FetchCollectionFailure(error.message)));\r\n  };\r\n}\r\n\r\nexport function* FetchCollectionStart() {\r\n  yield takeEvery(\"Fetch_Collection_Start\", fetchCollectionsStartAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}