{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { googleProvider, auth, createUserDoc } from \"../../firebase/firebase.utils\";\nimport { GoogleSignInSucess, GoogleSignInFailure } from \"./user-action\";\nexport function* Google() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserDoc, user);\n    const userSnap = yield userRef.get();\n    yield GoogleSignInSucess();\n  } catch (error) {}\n}\n_c = Google;\nexport function* GoogleSignInStart() {\n  yield takeLatest(\"Google_SignIn_Start\", Google);\n}\n_c2 = GoogleSignInStart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Google\");\n$RefreshReg$(_c2, \"GoogleSignInStart\");","map":{"version":3,"sources":["F:/React Projects/ecommerce/ec/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","googleProvider","auth","createUserDoc","GoogleSignInSucess","GoogleSignInFailure","Google","user","signInWithPopup","userRef","userSnap","get","error","GoogleSignInStart"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SACEC,cADF,EAEEC,IAFF,EAGEC,aAHF,QAIO,+BAJP;AAMA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,eAAxD;AAEA,OAAO,UAAUC,MAAV,GAAmB;AACxB,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAAvB;AACA,UAAMQ,OAAO,GAAG,MAAMT,IAAI,CAACG,aAAD,EAAgBI,IAAhB,CAA1B;AACA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMP,kBAAkB,EAAxB;AACD,GALD,CAKE,OAAOQ,KAAP,EAAc,CAAE;AACnB;KAPgBN,M;AASjB,OAAO,UAAUO,iBAAV,GAA8B;AACnC,QAAMf,UAAU,CAAC,qBAAD,EAAwBQ,MAAxB,CAAhB;AACD;MAFgBO,iB","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport {\r\n  googleProvider,\r\n  auth,\r\n  createUserDoc,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport { GoogleSignInSucess, GoogleSignInFailure } from \"./user-action\";\r\n\r\nexport function* Google() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserDoc, user);\r\n    const userSnap = yield userRef.get();\r\n    yield GoogleSignInSucess();\r\n  } catch (error) {}\r\n}\r\n\r\nexport function* GoogleSignInStart() {\r\n  yield takeLatest(\"Google_SignIn_Start\", Google);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}